{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivans\\\\Desktop\\\\Roskilde\\\\7th sem\\\\Complex IT systems\\\\exam\\\\3rd-main\\\\src\\\\components\\\\AuthPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthPage({\n  onAuthSuccess\n}) {\n  _s();\n  const [isLogin, setIsLogin] = useState(true); // Toggle between login and register\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [identifier, setIdentifier] = useState(''); // Used for login\n  const [error, setError] = useState('');\n  const [testResult, setTestResult] = useState('');\n  const toggleForm = () => {\n    setIsLogin(!isLogin);\n    setError('');\n    setUsername('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setIdentifier('');\n  };\n  const handleAuth = async e => {\n    e.preventDefault();\n    setError('');\n    if (!isLogin && password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const endpoint = isLogin ? '/api/User/login' : '/api/User';\n      const payload = isLogin ? {\n        Identifier: identifier,\n        Password: password\n      } // Adjusted for login\n      : {\n        UserName: username,\n        Email: email,\n        Password: password\n      }; // Adjusted for registration\n\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Something went wrong');\n      }\n      const data = await response.json();\n      if (isLogin) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('userId', data.userId);\n      } else {\n        console.log('Registered UserId:', data.userId);\n      }\n      onAuthSuccess();\n    } catch (err) {\n      setError(err.message || 'Something went wrong');\n    }\n  };\n\n  // Test connection to the backend\n  const testBackendConnection = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/test');\n      if (!response.ok) throw new Error('Failed to connect');\n      const data = await response.json();\n      setTestResult(data.message);\n    } catch (error) {\n      setTestResult('Connection failed: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLogin ? 'Login' : 'Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAuth,\n      children: [!isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: !isLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: !isLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username or Email\",\n        value: identifier,\n        onChange: e => setIdentifier(e.target.value),\n        required: isLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: !isLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testBackendConnection,\n      children: \"Test Backend Connection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), testResult && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: testResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleForm,\n      children: isLogin ? 'Switch to Register' : 'Switch to Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthPage, \"nTHD4zKsurOCLuZ2GicdBRtltIc=\");\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AuthPage","onAuthSuccess","_s","isLogin","setIsLogin","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","identifier","setIdentifier","error","setError","testResult","setTestResult","toggleForm","handleAuth","e","preventDefault","endpoint","payload","Identifier","Password","UserName","Email","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","localStorage","setItem","token","userId","console","log","err","testBackendConnection","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","style","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ivans/Desktop/Roskilde/7th sem/Complex IT systems/exam/3rd-main/src/components/AuthPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction AuthPage({ onAuthSuccess }) {\r\n  const [isLogin, setIsLogin] = useState(true); // Toggle between login and register\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [identifier, setIdentifier] = useState(''); // Used for login\r\n  const [error, setError] = useState('');\r\n  const [testResult, setTestResult] = useState('');\r\n\r\n  const toggleForm = () => {\r\n    setIsLogin(!isLogin);\r\n    setError('');\r\n    setUsername('');\r\n    setEmail('');\r\n    setPassword('');\r\n    setConfirmPassword('');\r\n    setIdentifier('');\r\n  };\r\n\r\n  const handleAuth = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (!isLogin && password !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const endpoint = isLogin ? '/api/User/login' : '/api/User';\r\n      const payload = isLogin\r\n        ? { Identifier: identifier, Password: password } // Adjusted for login\r\n        : { UserName: username, Email: email, Password: password }; // Adjusted for registration\r\n\r\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Something went wrong');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (isLogin) {\r\n        localStorage.setItem('token', data.token);\r\n        localStorage.setItem('userId', data.userId);\r\n      } else {\r\n        console.log('Registered UserId:', data.userId);\r\n      }\r\n\r\n      onAuthSuccess();\r\n    } catch (err) {\r\n      setError(err.message || 'Something went wrong');\r\n    }\r\n  };\r\n\r\n  // Test connection to the backend\r\n  const testBackendConnection = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/test');\r\n      if (!response.ok) throw new Error('Failed to connect');\r\n      const data = await response.json();\r\n      setTestResult(data.message);\r\n    } catch (error) {\r\n      setTestResult('Connection failed: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{isLogin ? 'Login' : 'Register'}</h2>\r\n      <form onSubmit={handleAuth}>\r\n        {!isLogin && (\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required={!isLogin}\r\n          />\r\n        )}\r\n        {!isLogin && (\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required={!isLogin}\r\n          />\r\n        )}\r\n        {isLogin && (\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username or Email\"\r\n            value={identifier}\r\n            onChange={(e) => setIdentifier(e.target.value)}\r\n            required={isLogin}\r\n          />\r\n        )}\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        {!isLogin && (\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required={!isLogin}\r\n          />\r\n        )}\r\n        <button type=\"submit\">{isLogin ? 'Login' : 'Register'}</button>\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      </form>\r\n\r\n      {/* Test connection button */}\r\n      <button onClick={testBackendConnection}>Test Backend Connection</button>\r\n      {testResult && <p>{testResult}</p>}\r\n\r\n      <button onClick={toggleForm}>\r\n        {isLogin ? 'Switch to Register' : 'Switch to Login'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMsB,UAAU,GAAGA,CAAA,KAAM;IACvBf,UAAU,CAAC,CAACD,OAAO,CAAC;IACpBa,QAAQ,CAAC,EAAE,CAAC;IACZV,WAAW,CAAC,EAAE,CAAC;IACfE,QAAQ,CAAC,EAAE,CAAC;IACZE,WAAW,CAAC,EAAE,CAAC;IACfE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMM,UAAU,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI,CAACb,OAAO,IAAIM,QAAQ,KAAKE,eAAe,EAAE;MAC5CK,QAAQ,CAAC,wBAAwB,CAAC;MAClC;IACF;IAEA,IAAI;MACF,MAAMO,QAAQ,GAAGpB,OAAO,GAAG,iBAAiB,GAAG,WAAW;MAC1D,MAAMqB,OAAO,GAAGrB,OAAO,GACnB;QAAEsB,UAAU,EAAEZ,UAAU;QAAEa,QAAQ,EAAEjB;MAAS,CAAC,CAAC;MAAA,EAC/C;QAAEkB,QAAQ,EAAEtB,QAAQ;QAAEuB,KAAK,EAAErB,KAAK;QAAEmB,QAAQ,EAAEjB;MAAS,CAAC,CAAC,CAAC;;MAE9D,MAAMoB,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwBP,QAAQ,EAAE,EAAE;QAC/DQ,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,OAAO;MAC9B,CAAC,CAAC;MAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,sBAAsB,CAAC;MAC9D;MAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACS,IAAI,CAAC,CAAC;MAElC,IAAInC,OAAO,EAAE;QACXuC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,KAAK,CAAC;QACzCF,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,IAAI,CAACI,MAAM,CAAC;MAC7C,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEN,IAAI,CAACI,MAAM,CAAC;MAChD;MAEA5C,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAO+C,GAAG,EAAE;MACZhC,QAAQ,CAACgC,GAAG,CAACR,OAAO,IAAI,sBAAsB,CAAC;IACjD;EACF,CAAC;;EAED;EACA,MAAMS,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MAC9D,IAAI,CAACD,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIG,KAAK,CAAC,mBAAmB,CAAC;MACtD,MAAME,IAAI,GAAG,MAAMZ,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCpB,aAAa,CAACuB,IAAI,CAACD,OAAO,CAAC;IAC7B,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACdG,aAAa,CAAC,qBAAqB,GAAGH,KAAK,CAACyB,OAAO,CAAC;IACtD;EACF,CAAC;EAED,oBACEzC,OAAA;IAAAmD,QAAA,gBACEnD,OAAA;MAAAmD,QAAA,EAAK/C,OAAO,GAAG,OAAO,GAAG;IAAU;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzCvD,OAAA;MAAMwD,QAAQ,EAAEnC,UAAW;MAAA8B,QAAA,GACxB,CAAC/C,OAAO,iBACPJ,OAAA;QACEyD,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAErD,QAAS;QAChBsD,QAAQ,EAAGtC,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACuC,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ,EAAE,CAAC1D;MAAQ;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CACF,EACA,CAACnD,OAAO,iBACPJ,OAAA;QACEyD,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAEnD,KAAM;QACboD,QAAQ,EAAGtC,CAAC,IAAKb,QAAQ,CAACa,CAAC,CAACuC,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ,EAAE,CAAC1D;MAAQ;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CACF,EACAnD,OAAO,iBACNJ,OAAA;QACEyD,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,mBAAmB;QAC/BC,KAAK,EAAE7C,UAAW;QAClB8C,QAAQ,EAAGtC,CAAC,IAAKP,aAAa,CAACO,CAAC,CAACuC,MAAM,CAACF,KAAK,CAAE;QAC/CG,QAAQ,EAAE1D;MAAQ;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CACF,eACDvD,OAAA;QACEyD,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEjD,QAAS;QAChBkD,QAAQ,EAAGtC,CAAC,IAAKX,WAAW,CAACW,CAAC,CAACuC,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,EACD,CAACnD,OAAO,iBACPJ,OAAA;QACEyD,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAE/C,eAAgB;QACvBgD,QAAQ,EAAGtC,CAAC,IAAKT,kBAAkB,CAACS,CAAC,CAACuC,MAAM,CAACF,KAAK,CAAE;QACpDG,QAAQ,EAAE,CAAC1D;MAAQ;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CACF,eACDvD,OAAA;QAAQyD,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAE/C,OAAO,GAAG,OAAO,GAAG;MAAU;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,EAC9DvC,KAAK,iBAAIhB,OAAA;QAAG+D,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAb,QAAA,EAAEnC;MAAK;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAGPvD,OAAA;MAAQiE,OAAO,EAAEf,qBAAsB;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvErC,UAAU,iBAAIlB,OAAA;MAAAmD,QAAA,EAAIjC;IAAU;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElCvD,OAAA;MAAQiE,OAAO,EAAE7C,UAAW;MAAA+B,QAAA,EACzB/C,OAAO,GAAG,oBAAoB,GAAG;IAAiB;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACpD,EAAA,CArIQF,QAAQ;AAAAiE,EAAA,GAARjE,QAAQ;AAuIjB,eAAeA,QAAQ;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}