{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivans\\\\Desktop\\\\Roskilde\\\\7th sem\\\\Complex IT systems\\\\exam\\\\3rd-mainlog\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../CSS/Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('All Genres');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchType, setSearchType] = useState('Movies');\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  // Fetch genres on component mount\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(`https://localhost:7019/api/movie/genre/${genreName}?page=${page}&pageSize=12`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch genres');\n        }\n        const data = await response.json();\n        setGenres(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchGenres();\n  }, []);\n  const handleSearch = () => {\n    if (!searchQuery.trim()) return;\n    console.log(`Searching for ${searchType}: ${searchQuery}`);\n    // Implement search functionality\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-name\",\n        children: \"MovieApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"dropdown-menu\",\n        value: selectedGenre,\n        onChange: e => setSelectedGenre(e.target.value),\n        children: [loading && /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(\"option\", {\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), !loading && !error && genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.genrename,\n          children: genre.genrename\n        }, genre.genreid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navbar-link\",\n        children: \"Recently Added\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navbar-link\",\n        children: \"Bookmarked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navbar-link\",\n        children: \"Recommended\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navbar-user-profile\",\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"dropdown-menu\",\n        value: searchType,\n        onChange: e => setSearchType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Movies\",\n          children: \"Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Actors\",\n          children: \"Actors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Directors\",\n          children: \"Directors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-bar\",\n        placeholder: `Search ${searchType}...`,\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-button\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"DxFRm89OCPB/rKFMZMDvfREQe1s=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Navbar","_s","genres","setGenres","selectedGenre","setSelectedGenre","searchQuery","setSearchQuery","searchType","setSearchType","loading","setLoading","error","setError","fetchGenres","response","fetch","genreName","page","ok","Error","data","json","message","handleSearch","trim","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","genre","genrename","genreid","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ivans/Desktop/Roskilde/7th sem/Complex IT systems/exam/3rd-mainlog/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../CSS/Navbar.css';\r\n\r\nconst Navbar = () => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState('All Genres');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchType, setSearchType] = useState('Movies');\r\n  const [loading, setLoading] = useState(true); // Loading state\r\n  const [error, setError] = useState(null); // Error state\r\n\r\n  // Fetch genres on component mount\r\n  useEffect(() => {\r\n    const fetchGenres = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(`https://localhost:7019/api/movie/genre/${genreName}?page=${page}&pageSize=12`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch genres');\r\n        }\r\n        const data = await response.json();\r\n        setGenres(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchGenres();\r\n  }, []);\r\n\r\n  const handleSearch = () => {\r\n    if (!searchQuery.trim()) return;\r\n    console.log(`Searching for ${searchType}: ${searchQuery}`);\r\n    // Implement search functionality\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-left\">\r\n        <h1 className=\"app-name\">MovieApp</h1>\r\n        <select\r\n          className=\"dropdown-menu\"\r\n          value={selectedGenre}\r\n          onChange={(e) => setSelectedGenre(e.target.value)}\r\n        >\r\n          {loading && <option>Loading...</option>}\r\n          {error && <option>Error: {error}</option>}\r\n          {!loading &&\r\n            !error &&\r\n            genres.map((genre) => (\r\n              <option key={genre.genreid} value={genre.genrename}>\r\n                {genre.genrename}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <button className=\"navbar-link\">Recently Added</button>\r\n        <button className=\"navbar-link\">Bookmarked</button>\r\n        <button className=\"navbar-link\">Recommended</button>\r\n      </div>\r\n      <div className=\"navbar-center\">\r\n        <button className=\"navbar-user-profile\">User Profile</button>\r\n      </div>\r\n      <div className=\"navbar-right\">\r\n        <select\r\n          className=\"dropdown-menu\"\r\n          value={searchType}\r\n          onChange={(e) => setSearchType(e.target.value)}\r\n        >\r\n          <option value=\"Movies\">Movies</option>\r\n          <option value=\"Actors\">Actors</option>\r\n          <option value=\"Directors\">Directors</option>\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          className=\"search-bar\"\r\n          placeholder={`Search ${searchType}...`}\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n        />\r\n        <button className=\"search-button\" onClick={handleSearch}>\r\n          Search\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}