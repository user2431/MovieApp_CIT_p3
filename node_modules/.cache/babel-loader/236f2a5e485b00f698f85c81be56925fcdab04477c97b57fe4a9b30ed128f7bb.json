{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivans\\\\Desktop\\\\Roskilde\\\\7th sem\\\\Complex IT systems\\\\exam\\\\3rd-mainlog\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../App\"; // Import UserContext\nimport \"../CSS/Navbar.css\"; // Import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  onLogout\n}) => {\n  _s();\n  const [genres, setGenres] = useState([]); // List of genres\n  const [loading, setLoading] = useState(true);\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    userId\n  } = useContext(UserContext); // Access userId from UserContext\n\n  // Fetch genres from the backend API\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await fetch(\"https://localhost:7019/api/movie/genre\");\n        if (!response.ok) throw new Error(\"Failed to fetch genres\");\n        const data = await response.json();\n        setGenres(data);\n      } catch (error) {\n        console.error(\"Error fetching genres:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchGenres();\n  }, []);\n  const handleGenreSelect = genreName => {\n    setSelectedGenre(genreName);\n    navigate(`/movies/genre/${genreName}`); // Navigate to the genre page\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-name\",\n        onClick: () => navigate(\"/\"),\n        children: \"MovieApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading Genres...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown-menu\",\n          value: selectedGenre,\n          onChange: e => handleGenreSelect(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre.genreName,\n            children: genre.genreName\n          }, genre.genreid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/recentreleased\"),\n        className: \"navbar-link\",\n        children: \"Recent Releases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/bookmarks\"),\n        className: \"navbar-link\",\n        children: \"Bookmarked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/recommended\"),\n        className: \"navbar-link\",\n        children: \"Recommended\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User ID: \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLogout,\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"6yBNIhnmhtzLy3fGrBkIXpBE5+E=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","UserContext","jsxDEV","_jsxDEV","Navbar","onLogout","_s","genres","setGenres","loading","setLoading","selectedGenre","setSelectedGenre","navigate","userId","fetchGenres","response","fetch","ok","Error","data","json","error","console","handleGenreSelect","genreName","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","genre","genreid","_c","$RefreshReg$"],"sources":["C:/Users/ivans/Desktop/Roskilde/7th sem/Complex IT systems/exam/3rd-mainlog/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from \"../App\"; // Import UserContext\r\nimport \"../CSS/Navbar.css\"; // Import CSS for styling\r\n\r\nconst Navbar = ({ onLogout }) => {\r\n  const [genres, setGenres] = useState([]); // List of genres\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { userId } = useContext(UserContext); // Access userId from UserContext\r\n\r\n  // Fetch genres from the backend API\r\n  useEffect(() => {\r\n    const fetchGenres = async () => {\r\n      try {\r\n        const response = await fetch(\"https://localhost:7019/api/movie/genre\");\r\n        if (!response.ok) throw new Error(\"Failed to fetch genres\");\r\n\r\n        const data = await response.json();\r\n        setGenres(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching genres:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchGenres();\r\n  }, []);\r\n\r\n  const handleGenreSelect = (genreName) => {\r\n    setSelectedGenre(genreName);\r\n    navigate(`/movies/genre/${genreName}`); // Navigate to the genre page\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-left\">\r\n        <h1 className=\"app-name\" onClick={() => navigate(\"/\")}>\r\n          MovieApp\r\n        </h1>\r\n\r\n        {/* Genre Dropdown */}\r\n        <div>\r\n          {loading ? (\r\n            <p>Loading Genres...</p>\r\n          ) : (\r\n            <select\r\n              className=\"dropdown-menu\"\r\n              value={selectedGenre}\r\n              onChange={(e) => handleGenreSelect(e.target.value)}\r\n            >\r\n              <option value=\"\">Select Genre</option>\r\n              {genres.map((genre) => (\r\n                <option key={genre.genreid} value={genre.genreName}>\r\n                  {genre.genreName}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        </div>\r\n\r\n        {/* Navigation Links */}\r\n        <button onClick={() => navigate(\"/recentreleased\")} className=\"navbar-link\">\r\n          Recent Releases\r\n        </button>\r\n        <button onClick={() => navigate(\"/bookmarks\")} className=\"navbar-link\">\r\n          Bookmarked\r\n        </button>\r\n        <button onClick={() => navigate(\"/recommended\")} className=\"navbar-link\">\r\n          Recommended\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"navbar-right\">\r\n        <p>User ID: {userId}</p> {/* Display User ID */}\r\n        <button onClick={onLogout} className=\"logout-button\">\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}