{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivans\\\\Desktop\\\\Roskilde\\\\7th sem\\\\Complex IT systems\\\\exam\\\\3rd-mainlog\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport GenrebasedMovies from './GenrebasedMovies';\nimport '../CSS/Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  useEffect(() => {\n    const fetchAllMovies = async () => {\n      if (selectedGenre) return; // Skip if a genre is selected\n      setLoading(true);\n      try {\n        const response = await fetch('https://localhost:7019/api/movie/allmovies');\n        if (!response.ok) {\n          throw new Error('Failed to fetch all movies');\n        }\n        const data = await response.json();\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllMovies();\n  }, [selectedGenre]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onGenreSelect: setSelectedGenre,\n      searchTypes: ['Title', 'Director', 'Actor'],\n      onSearch: params => console.log('Search Params:', params)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), selectedGenre ? /*#__PURE__*/_jsxDEV(GenrebasedMovies, {\n      selectedGenre: selectedGenre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading movies...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"movies-grid\",\n        children: !loading && !error && movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"movie-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster || '/placeholder.jpg',\n            alt: movie.title,\n            className: \"movie-poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: movie.releaseYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"anLfGydVa3e7vMWb4NBrl7j4w7M=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","GenrebasedMovies","jsxDEV","_jsxDEV","Home","_s","movies","setMovies","loading","setLoading","error","setError","selectedGenre","setSelectedGenre","fetchAllMovies","response","fetch","ok","Error","data","json","message","className","children","onGenreSelect","searchTypes","onSearch","params","console","log","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","src","poster","alt","title","releaseYear","id","_c","$RefreshReg$"],"sources":["C:/Users/ivans/Desktop/Roskilde/7th sem/Complex IT systems/exam/3rd-mainlog/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport GenrebasedMovies from './GenrebasedMovies';\r\nimport '../CSS/Home.css';\r\n\r\nconst Home = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedGenre, setSelectedGenre] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchAllMovies = async () => {\r\n      if (selectedGenre) return; // Skip if a genre is selected\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(\r\n          'https://localhost:7019/api/movie/allmovies'\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch all movies');\r\n        }\r\n        const data = await response.json();\r\n        setMovies(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllMovies();\r\n  }, [selectedGenre]);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <Navbar\r\n        onGenreSelect={setSelectedGenre}\r\n        searchTypes={['Title', 'Director', 'Actor']}\r\n        onSearch={(params) => console.log('Search Params:', params)}\r\n      />\r\n      {selectedGenre ? (\r\n        <GenrebasedMovies selectedGenre={selectedGenre} />\r\n      ) : (\r\n        <div className=\"movies-list-container\">\r\n          <h3>All Movies</h3>\r\n          {loading && <p>Loading movies...</p>}\r\n          {error && <p className=\"error\">{error}</p>}\r\n          <ul className=\"movies-grid\">\r\n            {!loading &&\r\n              !error &&\r\n              movies.map((movie) => (\r\n                <li key={movie.id} className=\"movie-item\">\r\n                  <img\r\n                    src={movie.poster || '/placeholder.jpg'}\r\n                    alt={movie.title}\r\n                    className=\"movie-poster\"\r\n                  />\r\n                  <div className=\"movie-info\">\r\n                    <strong>{movie.title}</strong>\r\n                    <span>{movie.releaseYear}</span>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMe,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAIF,aAAa,EAAE,OAAO,CAAC;MAC3BH,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4CACF,CAAC;QACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCb,SAAS,CAACY,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOT,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACW,OAAO,CAAC;MACzB,CAAC,SAAS;QACRZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,aAAa,CAAC,CAAC;EAEnB,oBACET,OAAA;IAAKmB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBpB,OAAA,CAACH,MAAM;MACLwB,aAAa,EAAEX,gBAAiB;MAChCY,WAAW,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAE;MAC5CC,QAAQ,EAAGC,MAAM,IAAKC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,MAAM;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,EACDrB,aAAa,gBACZT,OAAA,CAACF,gBAAgB;MAACW,aAAa,EAAEA;IAAc;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAElD9B,OAAA;MAAKmB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpCpB,OAAA;QAAAoB,QAAA,EAAI;MAAU;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClBzB,OAAO,iBAAIL,OAAA;QAAAoB,QAAA,EAAG;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACnCvB,KAAK,iBAAIP,OAAA;QAAGmB,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEb;MAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1C9B,OAAA;QAAImB,SAAS,EAAC,aAAa;QAAAC,QAAA,EACxB,CAACf,OAAO,IACP,CAACE,KAAK,IACNJ,MAAM,CAAC4B,GAAG,CAAEC,KAAK,iBACfhC,OAAA;UAAmBmB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvCpB,OAAA;YACEiC,GAAG,EAAED,KAAK,CAACE,MAAM,IAAI,kBAAmB;YACxCC,GAAG,EAAEH,KAAK,CAACI,KAAM;YACjBjB,SAAS,EAAC;UAAc;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACF9B,OAAA;YAAKmB,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBpB,OAAA;cAAAoB,QAAA,EAASY,KAAK,CAACI;YAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,eAC9B9B,OAAA;cAAAoB,QAAA,EAAOY,KAAK,CAACK;YAAW;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC;QAAA,GATCE,KAAK,CAACM,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUb,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAhEID,IAAI;AAAAsC,EAAA,GAAJtC,IAAI;AAkEV,eAAeA,IAAI;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}