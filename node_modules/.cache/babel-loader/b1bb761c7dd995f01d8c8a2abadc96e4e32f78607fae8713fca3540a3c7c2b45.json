{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivans\\\\Desktop\\\\Roskilde\\\\7th sem\\\\Complex IT systems\\\\exam\\\\3rd-mainlog\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../App\";\nimport UserProfile from \"./UserProfile\";\nimport \"../CSS/Navbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  onLogout\n}) => {\n  _s();\n  const [showUserProfile, setShowUserProfile] = useState(false);\n  const [genres, setGenres] = useState([]); // Store fetched genres\n  const [loading, setLoading] = useState(true); // Loading state\n  const navigate = useNavigate();\n  const {\n    userId\n  } = useContext(UserContext); // Access userId (future use)\n\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await fetch(\"https://localhost:7019/api/movie/genre\");\n        if (!response.ok) throw new Error(\"Failed to fetch genres\");\n        const data = await response.json();\n        setGenres(data);\n      } catch (error) {\n        console.error(\"Error fetching genres:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchGenres();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-name\",\n        onClick: () => navigate(\"/\"),\n        children: \"MovieApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading Genres...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown-menu\",\n          onChange: e => navigate(`/movies/genre/${e.target.value}`),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre.genreName,\n            children: genre.genreName\n          }, genre.genreid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/recentreleased\"),\n        className: \"navbar-link\",\n        children: \"Recent Releases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/bookmarks\"),\n        className: \"navbar-link\",\n        children: \"Bookmarked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navbar-link\",\n        onClick: () => setShowUserProfile(true),\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLogout,\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), showUserProfile && /*#__PURE__*/_jsxDEV(UserProfile, {\n      onClose: () => setShowUserProfile(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"KEvlow07zihbnNTRUPwRTmxyXEg=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","UserContext","UserProfile","jsxDEV","_jsxDEV","Navbar","onLogout","_s","showUserProfile","setShowUserProfile","genres","setGenres","loading","setLoading","navigate","userId","fetchGenres","response","fetch","ok","Error","data","json","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","genre","genreName","genreid","onClose","_c","$RefreshReg$"],"sources":["C:/Users/ivans/Desktop/Roskilde/7th sem/Complex IT systems/exam/3rd-mainlog/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from \"../App\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport \"../CSS/Navbar.css\";\r\n\r\nconst Navbar = ({ onLogout }) => {\r\n  const [showUserProfile, setShowUserProfile] = useState(false);\r\n  const [genres, setGenres] = useState([]); // Store fetched genres\r\n  const [loading, setLoading] = useState(true); // Loading state\r\n  const navigate = useNavigate();\r\n  const { userId } = useContext(UserContext); // Access userId (future use)\r\n\r\n  useEffect(() => {\r\n    const fetchGenres = async () => {\r\n      try {\r\n        const response = await fetch(\"https://localhost:7019/api/movie/genre\");\r\n        if (!response.ok) throw new Error(\"Failed to fetch genres\");\r\n\r\n        const data = await response.json();\r\n        setGenres(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching genres:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchGenres();\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-left\">\r\n        <h1 className=\"app-name\" onClick={() => navigate(\"/\")}>\r\n          MovieApp\r\n        </h1>\r\n\r\n        {/* Genre Dropdown */}\r\n        <div>\r\n          {loading ? (\r\n            <p>Loading Genres...</p>\r\n          ) : (\r\n            <select\r\n              className=\"dropdown-menu\"\r\n              onChange={(e) => navigate(`/movies/genre/${e.target.value}`)}\r\n            >\r\n              <option value=\"\">Select Genre</option>\r\n              {genres.map((genre) => (\r\n                <option key={genre.genreid} value={genre.genreName}>\r\n                  {genre.genreName}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        </div>\r\n\r\n        {/* Other Navigation Links */}\r\n        <button onClick={() => navigate(\"/recentreleased\")} className=\"navbar-link\">\r\n          Recent Releases\r\n        </button>\r\n        <button onClick={() => navigate(\"/bookmarks\")} className=\"navbar-link\">\r\n          Bookmarked\r\n        </button>\r\n      </div>\r\n\r\n      {/* Right Section */}\r\n      <div className=\"navbar-right\">\r\n        <button className=\"navbar-link\" onClick={() => setShowUserProfile(true)}>\r\n          User Profile\r\n        </button>\r\n        <button onClick={onLogout} className=\"logout-button\">\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      {/* User Profile Popup */}\r\n      {showUserProfile && (\r\n        <UserProfile onClose={() => setShowUserProfile(false)} />\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,QAAQ;AACpC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAMiB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEe;EAAO,CAAC,GAAGhB,UAAU,CAACE,WAAW,CAAC,CAAC,CAAC;;EAE5CH,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;QACtE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAE3D,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,SAAS,CAACU,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,SAAS;QACRV,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKqB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBtB,OAAA;MAAKqB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BtB,OAAA;QAAIqB,SAAS,EAAC,UAAU;QAACE,OAAO,EAAEA,CAAA,KAAMb,QAAQ,CAAC,GAAG,CAAE;QAAAY,QAAA,EAAC;MAEvD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGL3B,OAAA;QAAAsB,QAAA,EACGd,OAAO,gBACNR,OAAA;UAAAsB,QAAA,EAAG;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAExB3B,OAAA;UACEqB,SAAS,EAAC,eAAe;UACzBO,QAAQ,EAAGC,CAAC,IAAKnB,QAAQ,CAAC,iBAAiBmB,CAAC,CAACC,MAAM,CAACC,KAAK,EAAE,CAAE;UAAAT,QAAA,gBAE7DtB,OAAA;YAAQ+B,KAAK,EAAC,EAAE;YAAAT,QAAA,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACrCrB,MAAM,CAAC0B,GAAG,CAAEC,KAAK,iBAChBjC,OAAA;YAA4B+B,KAAK,EAAEE,KAAK,CAACC,SAAU;YAAAZ,QAAA,EAChDW,KAAK,CAACC;UAAS,GADLD,KAAK,CAACE,OAAO;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAElB,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MACT;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGN3B,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAMb,QAAQ,CAAC,iBAAiB,CAAE;QAACW,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAE5E;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT3B,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAMb,QAAQ,CAAC,YAAY,CAAE;QAACW,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAEvE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN3B,OAAA;MAAKqB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BtB,OAAA;QAAQqB,SAAS,EAAC,aAAa;QAACE,OAAO,EAAEA,CAAA,KAAMlB,kBAAkB,CAAC,IAAI,CAAE;QAAAiB,QAAA,EAAC;MAEzE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT3B,OAAA;QAAQuB,OAAO,EAAErB,QAAS;QAACmB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAErD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLvB,eAAe,iBACdJ,OAAA,CAACF,WAAW;MAACsC,OAAO,EAAEA,CAAA,KAAM/B,kBAAkB,CAAC,KAAK;IAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACzD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA5EIF,MAAM;EAAA,QAIOL,WAAW;AAAA;AAAAyC,EAAA,GAJxBpC,MAAM;AA8EZ,eAAeA,MAAM;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}