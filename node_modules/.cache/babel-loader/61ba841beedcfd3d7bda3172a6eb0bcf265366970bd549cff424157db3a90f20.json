{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivans\\\\Desktop\\\\Roskilde\\\\7th sem\\\\Complex IT systems\\\\exam\\\\3rd-mainlog\\\\src\\\\components\\\\GenrebasedMovies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../CSS/GenrebasedMovies.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenrebasedMovies = () => {\n  _s();\n  const {\n    genreName\n  } = useParams();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (!genreName) return;\n      try {\n        setLoading(true);\n        const response = await fetch(`https://localhost:7019/api/movie/genre/${genreName}?page=${page}&pageSize=12`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch movies');\n        }\n        const data = await response.json();\n        setMovies(data.movies || []);\n        setTotalPages(data.totalPages || 0);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [genreName, page]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genrebased-movies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [genreName, \" Movies\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.poster,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: page <= 0,\n        onClick: () => setPage(prevPage => Math.max(prevPage - 1, 0)),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", page + 1, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: page >= totalPages - 1,\n        onClick: () => setPage(prevPage => prevPage + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(GenrebasedMovies, \"rfB4tP1s5erev/LhOt3Jsx5E8rY=\", false, function () {\n  return [useParams];\n});\n_c = GenrebasedMovies;\nexport default GenrebasedMovies;\nvar _c;\n$RefreshReg$(_c, \"GenrebasedMovies\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","GenrebasedMovies","_s","genreName","movies","setMovies","loading","setLoading","error","setError","page","setPage","totalPages","setTotalPages","fetchMovies","response","fetch","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","movie","title","src","poster","alt","id","disabled","onClick","prevPage","Math","max","_c","$RefreshReg$"],"sources":["C:/Users/ivans/Desktop/Roskilde/7th sem/Complex IT systems/exam/3rd-mainlog/src/components/GenrebasedMovies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../CSS/GenrebasedMovies.css';\r\n\r\nconst GenrebasedMovies = () => {\r\n  const { genreName } = useParams();\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      if (!genreName) return;\r\n\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(\r\n          `https://localhost:7019/api/movie/genre/${genreName}?page=${page}&pageSize=12`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch movies');\r\n        }\r\n        const data = await response.json();\r\n        setMovies(data.movies || []);\r\n        setTotalPages(data.totalPages || 0);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, [genreName, page]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"genrebased-movies\">\r\n      <h1>{genreName} Movies</h1>\r\n      <div className=\"movies-list\">\r\n        {movies.map((movie) => (\r\n          <div key={movie.id} className=\"movie-item\">\r\n            <h3>{movie.title}</h3>\r\n            <img src={movie.poster} alt={movie.title} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"pagination\">\r\n        <button\r\n          disabled={page <= 0}\r\n          onClick={() => setPage((prevPage) => Math.max(prevPage - 1, 0))}\r\n        >\r\n          Previous\r\n        </button>\r\n        <span>\r\n          Page {page + 1} of {totalPages}\r\n        </span>\r\n        <button\r\n          disabled={page >= totalPages - 1}\r\n          onClick={() => setPage((prevPage) => prevPage + 1)}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenrebasedMovies;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}