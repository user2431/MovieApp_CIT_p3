{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivans\\\\Desktop\\\\Roskilde\\\\7th sem\\\\Complex IT systems\\\\exam\\\\3rd-mainlog\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\n// Updated Navbar.js\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../CSS/Navbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  onLogout\n}) => {\n  _s();\n  const [genres, setGenres] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await fetch(\"https://localhost:7019/api/movie/genre\");\n        if (!response.ok) throw new Error(\"Failed to fetch genres\");\n        const data = await response.json();\n        setGenres(data);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching genres:\", error);\n      }\n    };\n    fetchGenres();\n  }, []);\n  const handleGenreSelect = genreName => {\n    setSelectedGenre(genreName);\n    navigate(`/movies/genre/${genreName}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-name\",\n        onClick: () => navigate(\"/\"),\n        children: \"MovieApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Genres...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"dropdown-menu\",\n        value: selectedGenre,\n        onChange: e => handleGenreSelect(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.genreName,\n          children: genre.genreName\n        }, genre.genreid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/recentreleased\"),\n        className: \"navbar-link\",\n        children: \"Recent Releases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-right\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLogout,\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"McmEsl6R5OH7W7yURFEB7qt6dig=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Navbar","onLogout","_s","genres","setGenres","loading","setLoading","selectedGenre","setSelectedGenre","navigate","fetchGenres","response","fetch","ok","Error","data","json","error","console","handleGenreSelect","genreName","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","genre","genreid","_c","$RefreshReg$"],"sources":["C:/Users/ivans/Desktop/Roskilde/7th sem/Complex IT systems/exam/3rd-mainlog/src/components/Navbar.js"],"sourcesContent":["// Updated Navbar.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../CSS/Navbar.css\";\r\n\r\nconst Navbar = ({ onLogout }) => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchGenres = async () => {\r\n      try {\r\n        const response = await fetch(\"https://localhost:7019/api/movie/genre\");\r\n        if (!response.ok) throw new Error(\"Failed to fetch genres\");\r\n\r\n        const data = await response.json();\r\n        setGenres(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching genres:\", error);\r\n      }\r\n    };\r\n\r\n    fetchGenres();\r\n  }, []);\r\n\r\n  const handleGenreSelect = (genreName) => {\r\n    setSelectedGenre(genreName);\r\n    navigate(`/movies/genre/${genreName}`);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-left\">\r\n        <h1 className=\"app-name\" onClick={() => navigate(\"/\")}>\r\n          MovieApp\r\n        </h1>\r\n        {loading ? (\r\n          <p>Loading Genres...</p>\r\n        ) : (\r\n          <select\r\n            className=\"dropdown-menu\"\r\n            value={selectedGenre}\r\n            onChange={(e) => handleGenreSelect(e.target.value)}\r\n          >\r\n            <option value=\"\">Select Genre</option>\r\n            {genres.map((genre) => (\r\n              <option key={genre.genreid} value={genre.genreName}>\r\n                {genre.genreName}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n        <button onClick={() => navigate(\"/recentreleased\")} className=\"navbar-link\">\r\n          Recent Releases\r\n        </button>\r\n      </div>\r\n      <div className=\"navbar-right\">\r\n        <button onClick={onLogout} className=\"logout-button\">\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}