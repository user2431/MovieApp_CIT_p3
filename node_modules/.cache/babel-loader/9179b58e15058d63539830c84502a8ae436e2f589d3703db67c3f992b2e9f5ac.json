{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivans\\\\Desktop\\\\Roskilde\\\\7th sem\\\\Complex IT systems\\\\exam\\\\3rd-mainlog\\\\src\\\\components\\\\AuthPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../CSS/AuthPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthPage({\n  onAuthSuccess\n}) {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [identifier, setIdentifier] = useState('');\n  const [email, setEmail] = useState('');\n  const [user_psw, setUserPsw] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const toggleForm = () => {\n    setIsLogin(!isLogin);\n    setError('');\n    setIdentifier('');\n    setEmail('');\n    setUserPsw('');\n    setConfirmPassword('');\n  };\n  const handleAuth = async e => {\n    e.preventDefault();\n    setError('');\n    if (!isLogin && user_psw !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const endpoint = isLogin ? '/api/User/login' : '/api/User/register';\n      const payload = isLogin ? {\n        Identifier: identifier,\n        Password: user_psw\n      } : {\n        UserName: identifier,\n        Email: email,\n        Password: user_psw\n      };\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) throw new Error('Authentication failed.');\n      onAuthSuccess();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLogin ? 'Login' : 'Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAuth,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username or Email\",\n        value: identifier,\n        onChange: e => setIdentifier(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: user_psw,\n        onChange: e => setUserPsw(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleForm,\n      children: isLogin ? 'Switch to Register' : 'Switch to Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthPage, \"xffWxCk8NJSe1/Bllf0jNHfdZlQ=\");\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AuthPage","onAuthSuccess","_s","isLogin","setIsLogin","identifier","setIdentifier","email","setEmail","user_psw","setUserPsw","confirmPassword","setConfirmPassword","error","setError","toggleForm","handleAuth","e","preventDefault","endpoint","payload","Identifier","Password","UserName","Email","response","fetch","method","headers","body","JSON","stringify","ok","Error","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ivans/Desktop/Roskilde/7th sem/Complex IT systems/exam/3rd-mainlog/src/components/AuthPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../CSS/AuthPage.css';\r\n\r\nfunction AuthPage({ onAuthSuccess }) {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [identifier, setIdentifier] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [user_psw, setUserPsw] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const toggleForm = () => {\r\n    setIsLogin(!isLogin);\r\n    setError('');\r\n    setIdentifier('');\r\n    setEmail('');\r\n    setUserPsw('');\r\n    setConfirmPassword('');\r\n  };\r\n\r\n  const handleAuth = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (!isLogin && user_psw !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const endpoint = isLogin ? '/api/User/login' : '/api/User/register';\r\n      const payload = isLogin\r\n        ? { Identifier: identifier, Password: user_psw }\r\n        : { UserName: identifier, Email: email, Password: user_psw };\r\n\r\n      const response = await fetch(endpoint, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Authentication failed.');\r\n\r\n      onAuthSuccess();\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <h2>{isLogin ? 'Login' : 'Register'}</h2>\r\n      <form onSubmit={handleAuth}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username or Email\"\r\n          value={identifier}\r\n          onChange={(e) => setIdentifier(e.target.value)}\r\n          required\r\n        />\r\n        {!isLogin && (\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        )}\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={user_psw}\r\n          onChange={(e) => setUserPsw(e.target.value)}\r\n          required\r\n        />\r\n        {!isLogin && (\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n        )}\r\n        <button type=\"submit\">{isLogin ? 'Login' : 'Register'}</button>\r\n      </form>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <button onClick={toggleForm}>\r\n        {isLogin ? 'Switch to Register' : 'Switch to Login'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}